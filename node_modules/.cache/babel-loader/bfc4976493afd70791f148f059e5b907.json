{"ast":null,"code":"import _slicedToArray from \"/home/dawid/trening/tictac/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/dawid/trening/tictac/src/Game.js\";\nimport React from 'react';\nimport Board from './Board';\n\nconst calculateWinner = squares => {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i += 1) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        winner: squares[a],\n        winnerRow: lines[i]\n      };\n    }\n  }\n\n  return {\n    winner: null,\n    winnerRow: null\n  };\n};\n\nconst getLocation = move => {\n  const locationMap = {\n    0: 'row: 1, col: 1',\n    1: 'row: 1, col: 2',\n    2: 'row: 1, col: 3',\n    3: 'row: 2, col: 1',\n    4: 'row: 2, col: 2',\n    5: 'row: 2, col: 3',\n    6: 'row: 3, col: 1',\n    7: 'row: 3, col: 2',\n    8: 'row: 3, col: 3'\n  };\n  return locationMap[move];\n};\n\nconst initialState = {\n  history: [{\n    squares: Array(9).fill(null)\n  }],\n  currentStepNumber: 0,\n  xIsNext: true\n};\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.currentStepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares).winner || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'H' : 'V';\n    this.setState({\n      history: history.concat([{\n        squares,\n        currentLocation: getLocation(i),\n        stepNumber: history.length\n      }]),\n      xIsNext: !this.state.xIsNext,\n      currentStepNumber: history.length\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      currentStepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  sortMoves() {\n    this.setState({\n      history: this.state.history.reverse()\n    });\n  }\n\n  reset() {\n    this.setState(initialState);\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.currentStepNumber];\n\n    const _calculateWinner = calculateWinner(current.squares),\n          winner = _calculateWinner.winner,\n          winnerRow = _calculateWinner.winnerRow;\n\n    const moves = history.map((step, move) => {\n      const currentLocation = step.currentLocation ? \"(\".concat(step.currentLocation, \")\") : '';\n      const desc = step.stepNumber ? \"Go to move #\".concat(step.stepNumber) : 'Go to game start';\n      const classButton = move === this.state.currentStepNumber ? 'button--green' : '';\n      return React.createElement(\"li\", {\n        key: move,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"\".concat(classButton, \" button\"),\n        onClick: () => this.jumpTo(move),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"\".concat(desc, \" \").concat(currentLocation)));\n    });\n    let status;\n\n    if (winner) {\n      status = \"Winner \".concat(winner);\n    } else if (history.length === 10) {\n      status = 'Draw. No one won.';\n    } else {\n      status = \"Next player: \".concat(this.state.xIsNext ? 'Harry' : 'Voldi');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"./public/harry.jpg\",\n      alt: \"text\",\n      width: \"500\",\n      height: \"600\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      width: \"50\",\n      height: \"60\",\n      alt: \"cdpr games\",\n      src: \"https://bleedingcool.com/wp-content/uploads/2021/06/pjimage-4-1-1200x900.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Board, {\n      squares: current.squares,\n      winnerSquares: winnerRow,\n      onClick: i => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, status), React.createElement(\"button\", {\n      className: \"button\",\n      onClick: () => this.sortMoves(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Sort moves\"), React.createElement(\"button\", {\n      className: \"button button--new-game\",\n      onClick: () => this.reset(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"New game\"), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, moves)));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/dawid/trening/tictac/src/Game.js"],"names":["React","Board","calculateWinner","squares","lines","i","length","a","b","c","winner","winnerRow","getLocation","move","locationMap","initialState","history","Array","fill","currentStepNumber","xIsNext","Game","Component","constructor","props","state","handleClick","slice","current","setState","concat","currentLocation","stepNumber","jumpTo","step","sortMoves","reverse","reset","render","moves","map","desc","classButton","status"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Board from './Board';\n\nconst calculateWinner = (squares) => {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i += 1) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return { winner: squares[a], winnerRow: lines[i] };\n    }\n  }\n\n  return { winner: null, winnerRow: null };\n};\n\nconst getLocation = (move) => {\n  const locationMap = {\n    0: 'row: 1, col: 1',\n    1: 'row: 1, col: 2',\n    2: 'row: 1, col: 3',\n    3: 'row: 2, col: 1',\n    4: 'row: 2, col: 2',\n    5: 'row: 2, col: 3',\n    6: 'row: 3, col: 1',\n    7: 'row: 3, col: 2',\n    8: 'row: 3, col: 3',\n  };\n\n  return locationMap[move];\n};\n\nconst initialState = {\n  history: [\n    {\n      squares: Array(9).fill(null),\n    },\n  ],\n  currentStepNumber: 0,\n  xIsNext: true,\n};\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.currentStepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares).winner || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'H' : 'V';\n    this.setState({\n      history: history.concat([\n        {\n          squares,\n          currentLocation: getLocation(i),\n          stepNumber: history.length,\n        },\n      ]),\n      xIsNext: !this.state.xIsNext,\n      currentStepNumber: history.length,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      currentStepNumber: step,\n      xIsNext: step % 2 === 0,\n    });\n  }\n\n  sortMoves() {\n    this.setState({\n      history: this.state.history.reverse(),\n    });\n  }\n\n  reset() {\n    this.setState(initialState);\n  }\n\n  render() {\n    const { history } = this.state;\n    const current = history[this.state.currentStepNumber];\n    const { winner, winnerRow } = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const currentLocation = step.currentLocation ? `(${step.currentLocation})` : '';\n      const desc = step.stepNumber ? `Go to move #${step.stepNumber}` : 'Go to game start';\n      const classButton = move === this.state.currentStepNumber ? 'button--green' : '';\n\n      return (\n        <li key={move}>\n          <button className={`${classButton} button`} onClick={() => this.jumpTo(move)}>\n            {`${desc} ${currentLocation}`}\n          </button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = `Winner ${winner}`;\n    } else if (history.length === 10) {\n      status = 'Draw. No one won.';\n    } else {\n      status = `Next player: ${this.state.xIsNext ? 'Harry' : 'Voldi'}`;\n    }\n\n    return (\n      <div className=\"game\">\n        <img src=\"./public/harry.jpg\" alt=\"text\" width=\"500\" height=\"600\" />\n        <img width=\"50\" height=\"60\"\n                alt='cdpr games'\n                src='https://bleedingcool.com/wp-content/uploads/2021/06/pjimage-4-1-1200x900.jpg'\n              />\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            winnerSquares={winnerRow}\n            onClick={i => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <button className=\"button\" onClick={() => this.sortMoves()}>\n            Sort moves\n          </button>\n          <button className=\"button button--new-game\" onClick={() => this.reset()}>\n            New game\n          </button>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}