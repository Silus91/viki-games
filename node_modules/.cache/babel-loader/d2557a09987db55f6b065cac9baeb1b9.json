{"ast":null,"code":"import _slicedToArray from \"/home/dawid/trening/tictac/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/dawid/trening/tictac/src/Game.js\";\nimport React, { useState } from 'react';\nimport Board from './Board';\nimport { calculateWinner } from '../helper';\n\nconst Game = () => {\n  const _useState = useState([Array(9).fill(null)]),\n        _useState2 = _slicedToArray(_useState, 2),\n        history = _useState2[0],\n        setHistory = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        stepNumber = _useState4[0],\n        setStepNumber = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        xIsNext = _useState6[0],\n        setxIsNext = _useState6[1];\n\n  const winner = calculateWinner(history[stepNumber]);\n  const xO = xIsNext ? \"Voldi\" : \"Harry\";\n\n  const handleClick = i => {\n    const historyPoint = history.slice(0, stepNumber + 1);\n    const current = historyPoint[stepNumber];\n    const squares = [...current];\n    if (winner || squares[i]) return;\n    squares[i] = xO;\n    setHistory([...history, squares]);\n    setStepNumber(historyPoint.length);\n    setxIsNext(!xIsNext);\n  };\n\n  const jumpTo = step => {\n    setStepNumber(step);\n    setxIsNext(step % 2 === 0);\n  };\n\n  const renderMoves = () => {\n    history.map((_step, move) => {\n      const destination = move ? \"Go to move #\".concat(move) : \"Go to Start\";\n      return React.createElement(\"li\", {\n        key: move,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onCLick: () => jumpTo(move),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, destination));\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"React tic\"), React.createElement(Board, {\n    squares: history[stepNumber],\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"info-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"History\"), renderMoves())), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, winner ? \"winner: \" + winner : \" Next Player: \" + xO));\n};\n\nexport default Game;","map":{"version":3,"sources":["/home/dawid/trening/tictac/src/Game.js"],"names":["React","useState","Board","calculateWinner","Game","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setxIsNext","winner","xO","handleClick","i","historyPoint","slice","current","squares","length","jumpTo","step","renderMoves","map","_step","move","destination"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,eAAT,QAAgC,WAAhC;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA,oBACeH,QAAQ,CAAC,CAACI,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAAD,CADvB;AAAA;AAAA,QACRC,OADQ;AAAA,QACCC,UADD;;AAAA,qBAEqBP,QAAQ,CAAC,CAAD,CAF7B;AAAA;AAAA,QAERQ,UAFQ;AAAA,QAEIC,aAFJ;;AAAA,qBAGeT,QAAQ,CAAC,IAAD,CAHvB;AAAA;AAAA,QAGRU,OAHQ;AAAA,QAGCC,UAHD;;AAIf,QAAMC,MAAM,GAAGV,eAAe,CAACI,OAAO,CAACE,UAAD,CAAR,CAA9B;AACA,QAAMK,EAAE,GAAGH,OAAO,GAAG,OAAH,GAAa,OAA/B;;AAEA,QAAMI,WAAW,GAAIC,CAAD,IAAO;AACvB,UAAMC,YAAY,GAAGV,OAAO,CAACW,KAAR,CAAc,CAAd,EAAiBT,UAAU,GAAE,CAA7B,CAArB;AACA,UAAMU,OAAO,GAAGF,YAAY,CAACR,UAAD,CAA5B;AACA,UAAMW,OAAO,GAAG,CAAC,GAAGD,OAAJ,CAAhB;AAEA,QAAGN,MAAM,IAAIO,OAAO,CAACJ,CAAD,CAApB,EAAyB;AAEzBI,IAAAA,OAAO,CAACJ,CAAD,CAAP,GAAYF,EAAZ;AACAN,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaa,OAAb,CAAD,CAAV;AACAV,IAAAA,aAAa,CAACO,YAAY,CAACI,MAAd,CAAb;AACAT,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH,GAXD;;AAaA,QAAMW,MAAM,GAAIC,IAAD,IAAU;AACrBb,IAAAA,aAAa,CAACa,IAAD,CAAb;AACAX,IAAAA,UAAU,CAACW,IAAI,GAAG,CAAP,KAAa,CAAd,CAAV;AACH,GAHD;;AAMA,QAAMC,WAAW,GAAG,MAAM;AACtBjB,IAAAA,OAAO,CAACkB,GAAR,CAAY,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACzB,YAAMC,WAAW,GAAGD,IAAI,yBAAkBA,IAAlB,IAA2B,aAAnD;AACA,aACI;AAAI,QAAA,GAAG,EAAEA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE,MAAML,MAAM,CAACK,IAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsCC,WAAtC,CADJ,CADJ;AAKH,KAPD;AAQH,GATD;;AAWA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAErB,OAAO,CAACE,UAAD,CAAvB;AAAqC,IAAA,OAAO,EAAEM,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,EAECS,WAAW,EAFZ,CADJ,CAHJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKX,MAAM,GAAG,aAAaA,MAAhB,GAAyB,mBAAmBC,EAAvD,CATJ,CADJ;AAaH,CAlDD;;AAoDA,eAAeV,IAAf","sourcesContent":["import React,{ useState} from 'react';\nimport Board from './Board';\nimport { calculateWinner } from '../helper';\n\nconst Game = () => {\n    const [history, setHistory] = useState([Array(9).fill(null)]);\n    const [stepNumber, setStepNumber] = useState(0);\n    const [xIsNext, setxIsNext] = useState(true);\n    const winner = calculateWinner(history[stepNumber]);\n    const xO = xIsNext ? \"Voldi\" : \"Harry\";\n\n    const handleClick = (i) => {\n        const historyPoint = history.slice(0, stepNumber +1);\n        const current = historyPoint[stepNumber];\n        const squares = [...current];\n\n        if(winner || squares[i]) return;\n\n        squares[i] =xO;\n        setHistory([...history, squares]);\n        setStepNumber(historyPoint.length);\n        setxIsNext(!xIsNext);\n    };\n\n    const jumpTo = (step) => {\n        setStepNumber(step);\n        setxIsNext(step % 2 === 0);\n    };\n\n\n    const renderMoves = () => {\n        history.map((_step, move) => {\n            const destination = move ? `Go to move #${move}` : \"Go to Start\";\n            return (\n                <li key={move}>\n                    <button onCLick={() => jumpTo(move)}>{destination}</button>\n                </li>\n           );\n        });\n    }\n\n    return (\n        <div>\n            <h1>React tic</h1>\n            <Board squares={history[stepNumber]} onClick={handleClick} />\n            <div className=\"info-wrapper\">\n                <div>\n                <h3>History</h3>\n                {renderMoves()}\n                </div>\n            </div>\n            <h3>{winner ? \"winner: \" + winner : \" Next Player: \" + xO}</h3>\n        </div>\n    )\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}