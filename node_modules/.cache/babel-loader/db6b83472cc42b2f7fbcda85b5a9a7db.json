{"ast":null,"code":"import _slicedToArray from \"/home/dawid/trening/tictac/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nexport function calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i += 1) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      console.log(a, b, c);\n      return {\n        winner: squares[a],\n        winnerRow: lines[i]\n      };\n    }\n  }\n\n  return null;\n}\n11304810350;","map":{"version":3,"sources":["/home/dawid/trening/tictac/src/helper.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","console","log","winner","winnerRow"],"mappings":";AAAA,OAAO,SAASA,eAAT,CAAyBC,OAAzB,EAAkC;AACrC,QAAMC,KAAK,GAAG,CACV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADU,EAEV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFU,EAGV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHU,EAIV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJU,EAKV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALU,EAMV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANU,EAOV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPU,EAQV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARU,CAAd;;AAWE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,IAAI,CAAvC,EAA0C;AAAA,oCACtBD,KAAK,CAACC,CAAD,CADiB;AAAA,UACjCE,CADiC;AAAA,UAC9BC,CAD8B;AAAA,UAC3BC,CAD2B;;AAExC,QAAIN,OAAO,CAACI,CAAD,CAAP,IAAcJ,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACK,CAAD,CAApC,IAA2CL,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACM,CAAD,CAArE,EAA0E;AACxEC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ,EAAcC,CAAd,EAAgBC,CAAhB;AAEA,aAAO;AAAEG,QAAAA,MAAM,EAAET,OAAO,CAACI,CAAD,CAAjB;AAAsBM,QAAAA,SAAS,EAAET,KAAK,CAACC,CAAD;AAAtC,OAAP;AACD;AACF;;AAED,SAAO,IAAP;AACL;AAKD","sourcesContent":["export function calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n      ];\n\n      for (let i = 0; i < lines.length; i += 1) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n          console.log(a,b,c);\n\n          return { winner: squares[a], winnerRow: lines[i] };\n        }\n      }\n\n      return null;\n}\n\n\n\n\n11304810350"]},"metadata":{},"sourceType":"module"}